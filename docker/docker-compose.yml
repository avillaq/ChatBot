version: '3.8'

services:
  # Banco Principal (Nodo Coordinador)
  banco-principal:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: banco-principal
    hostname: banco-principal
    ports:
      - "5000:5000"  # Interfaz web
      - "8000:8000"  # Puerto P2P
    environment:
      - NODE_PORT=8000
      - NODE_NAME=Banco_Principal
      - WEB_PORT=5000
      - NODE_TYPE=principal
      - CONFIG_FILE=/app/config.json
    volumes:
      - ../configs/node-8000.json:/app/config.json:ro
      - banco_principal_data:/app/data
      - banco_principal_logs:/app/logs
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Banco Nacional (Sucursal 1)
  banco-nacional:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: banco-nacional
    hostname: banco-nacional
    ports:
      - "5001:5000"  # Interfaz web
      - "8001:8001"  # Puerto P2P
    environment:
      - NODE_PORT=8001
      - NODE_NAME=Banco_Nacional
      - WEB_PORT=5000
      - NODE_TYPE=sucursal
      - CONFIG_FILE=/app/config.json
    volumes:
      - ../configs/node-8001.json:/app/config.json:ro
      - banco_nacional_data:/app/data
      - banco_nacional_logs:/app/logs
    networks:
      - chatbot-network
    depends_on:
      - banco-principal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Banco Central (Sucursal 2)
  banco-central:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: banco-central
    hostname: banco-central
    ports:
      - "5002:5000"  # Interfaz web
      - "8002:8002"  # Puerto P2P
    environment:
      - NODE_PORT=8002
      - NODE_NAME=Banco_Central
      - WEB_PORT=5000
      - NODE_TYPE=sucursal
      - CONFIG_FILE=/app/config.json
    volumes:
      - ../configs/node-8002.json:/app/config.json:ro
      - banco_central_data:/app/data
      - banco_central_logs:/app/logs
    networks:
      - chatbot-network
    depends_on:
      - banco-principal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Banco Regional (Sucursal 3)
  banco-regional:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: banco-regional
    hostname: banco-regional
    ports:
      - "5003:5000"  # Interfaz web
      - "8003:8003"  # Puerto P2P
    environment:
      - NODE_PORT=8003
      - NODE_NAME=Banco_Regional
      - WEB_PORT=5000
      - NODE_TYPE=sucursal
      - CONFIG_FILE=/app/config.json
    volumes:
      - ../configs/node-8003.json:/app/config.json:ro
      - banco_regional_data:/app/data
      - banco_regional_logs:/app/logs
    networks:
      - chatbot-network
    depends_on:
      - banco-principal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

# Volúmenes persistentes para cada banco
volumes:
  banco_principal_data:
    driver: local
  banco_principal_logs:
    driver: local
  banco_nacional_data:
    driver: local
  banco_nacional_logs:
    driver: local
  banco_central_data:
    driver: local
  banco_central_logs:
    driver: local
  banco_regional_data:
    driver: local
  banco_regional_logs:
    driver: local

# Red personalizada para comunicación P2P
networks:
  chatbot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16